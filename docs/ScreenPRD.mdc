아래는 **Kiko 플랫폼의 와이어프레임 구조 초안**입니다. 각 주요 화면에 필요한 구성 요소들을 정의하였으며, 추후 Figma 작업 시 기준으로 삼을 수 있습니다.

---

## 🎨 Wireframe 구조

### 1. 홈 화면 (`/`)

* 상단: 로고 + 로그인/회원가입 버튼
* 메인 영역:

  * 🔊 추천 에피소드 리스트
  * 🔁 최근 학습 이어 듣기
* 하단: 서비스 소개, 피드백 링크

---

### 2. 에피소드 상세 / 플레이 화면 (`/episode/:id`)

* **좌측 영역 (스크립트 영역)**:

  * 문장별 하이라이팅 스크립트 (STT 변환)
  * 문장별 해석 (ON/OFF toggle)
  * 단어 클릭 시 툴팁/패널

* **우측 패널 (제어 및 단어 뜻)**:

  * 오디오 플레이어 (재생/일시정지, 배속 조절)
  * 에피소드 정보 (제목, 길이, 작성일)
  * 클릭한 단어 정보 (뜻, 품사, 예문, 저장 버튼)

---

### 3. 단어장 페이지 (`/vocab`)

* 탭 구성:

  * 📘 저장된 단어 목록
  * 📋 복습 모드 (단어카드, 객관식, 빈칸)
* 단어 리스트:

  * 단어, 뜻, 출처 에피소드, 추가일
  * 삭제/복습 예약 버튼

---

### 4. 로그인 / 회원가입 페이지 (`/login`, `/signup`)

* 이메일/비밀번호 기반 인증
* OAuth 버튼 (Google 등) (후순위 고려)
* 로그인 후 리디렉션 처리

---

### 5. 마이페이지 (`/mypage`)

* 나의 학습 히스토리:

  * 에피소드별 청취 진도율
  * 최근 단어 추가 내역
* 사용자 설정:

  * 테마 (다크/라이트)
  * 해석 보기 여부
  * 글꼴 크기

---

### 6. 오류/예외 처리 화면

* `404`: 존재하지 않는 에피소드 접근
* `401`: 로그인 필요 시
* `500`: 서버 문제 시 안내 및 문의 링크

---

### 🔧 공통 컴포넌트

* `Navbar`: 로고, 메뉴, 로그인 상태
* `Footer`: 서비스 소개, 피드백 링크
* `Toast`: 저장 완료, 오류 안내 등 피드백
* `Skeleton`: 로딩 시 스크립트/단어 로딩 UI

```
graph TD
  Root[홈 (/)]
  Episode[에피소드 상세 (/episode/:id)]
  Vocab[단어장 (/vocab)]
  Login[로그인 (/login)]
  Signup[회원가입 (/signup)]
  Mypage[마이페이지 (/mypage)]
  Error404[404 에러]
  Error401[401 에러]
  Error500[500 에러]

  Root --> Episode
  Root --> Vocab
  Root --> Login
  Root --> Signup
  Root --> Mypage

  Episode --> AudioPlayer[🎵 오디오 플레이어]
  Episode --> ScriptArea[📝 스크립트 + 해석]
  Episode --> WordPanel[📖 단어 툴팁/패널]
  
  Vocab --> WordList[🗂️ 단어 리스트]
  Vocab --> ReviewMode[🧠 복습 모드]

  Mypage --> History[📈 학습 이력]
  Mypage --> Settings[⚙️ 사용자 설정]

  Root --> Error404
  Root --> Error401
  Root --> Error500
```
